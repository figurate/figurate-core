allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'groovy'

	repositories {
		mavenCentral()
        // amdatu for rest/web services..
		ivy {
			url 'http://repository.amdatu.org/release/'
			layout 'pattern', {
				artifact "[artifact]/[artifact]-[revision].[ext]"
			}
		}
	}

    configurations {
        provided
//        compile.transitive = true

        // exclude google collections as guava is a complete superset of this library..
        all*.exclude group: 'com.google.collections', module: 'google-collections'
        all*.exclude group: 'org.ops4j.pax.url', module: 'pax-url-aether'
    }

	dependencies {
		compile(['org.codehaus.groovy:groovy-all:2.3.0-beta-2',
                 'org.apache.felix:org.apache.felix.framework:4.0.2'])

        testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
        testCompile 'ch.qos.logback:logback-classic:1.1.1'
	}
}

/**
 * Configuration for modules only.
 */
subprojects {
	apply plugin: 'osgi'
    apply plugin: 'maven'

    configurations {
//        provided extendsFrom compile
        compile.transitive = true
    }

	dependencies {
//        compile 'org.apache.felix:org.apache.felix.framework:4.0.2'

        compile([
            'biz.aQute.bnd:bndlib:2.2.0',
            'org.apache.felix:org.apache.felix.scr.annotations:1.9.6',
            'org.apache.felix:org.apache.felix.scr.ant:1.9.0',
            'org.codehaus.gpars:gpars:1.1.0',
            'org.amdatu.web.rest.doc:org.amdatu.web.rest.doc:1.1.1',
                'org.amdatu.web.rest.jaxrs:org.amdatu.web.rest.jaxrs:1.0.4',
            // start: blueprint dependencies..
//            'org.apache.aries.blueprint:org.apache.aries.blueprint:1.1.0',
//            'org.apache.aries.blueprint:org.apache.aries.blueprint.annotation.impl:1.0.0',
//            'org.apache.aries.proxy:org.apache.aries.proxy.impl:1.0.2',
//            'asm:asm-all:3.2'
            // end: blueprint

            'org.gcontracts:gcontracts-core:1.2.12',
        ])

//        testCompile project(':tests')
	}

    ant.properties.src = 'build/classes/main'
    ant.properties.classes = 'build/classes/main'

    task genscr(dependsOn: compileJava) << {
        println configurations.compile.asPath
        ant.taskdef(resource: 'scrtask.properties', classpath: configurations.compile.asPath )
        ant.scr(srcdir: ant.properties.src, destdir: ant.properties.classes, scanClasses: true, classpath: configurations.compile.asPath)
    }

    jar.dependsOn(genscr)

//    sourceSets.main.compileClasspath += configurations.provided
}

dependencies {
    testCompile([
        project(':figurate-osgi'),
        project(':figurate-log'),
        project(':figurate-common'),
    ])

    runtime([
            // adding this to ensure the bundle is in the cache..
            'org.apache.felix:org.apache.felix.scr:1.8.2',
//            'org.apache.felix:org.apache.felix.http.whiteboard:2.2.2',
//            'org.apache.felix:org.apache.felix.http.jetty:2.2.2',
            'org.apache.felix:org.apache.felix.http.bundle:2.2.2',
            'org.apache.felix:org.apache.felix.dependencymanager:3.1.0',
            'org.amdatu.web.rest.jaxrs:org.amdatu.web.rest.jaxrs:1.0.4',
            'org.amdatu.web.rest.wink:org.amdatu.web.rest.wink:1.0.8',
            'org.amdatu.web.rest.doc.swagger.ui:org.amdatu.web.rest.doc.swagger.ui:1.0.3',
            'org.amdatu.web.rest.doc.swagger:org.amdatu.web.rest.doc.swagger:1.0.4',
            'org.amdatu.web.resourcehandler:org.amdatu.web.resourcehandler:1.0.4',
            'org.codehaus.jackson:jackson-jaxrs:1.9.13',
            'org.codehaus.jackson:jackson-core-asl:1.9.13',
            'org.codehaus.jackson:jackson-mapper-asl:1.9.13',
            'org.codehaus.jsr166-mirror:jsr166y:1.7.0'
    ])
}
